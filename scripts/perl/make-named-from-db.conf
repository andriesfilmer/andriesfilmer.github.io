#!/usr/bin/perl

# MAKE-NAMED.CONF.PL
# Takes the domein from the database=> table 'pakketten' where 'use_dns' is true.

# DB Vars
$dbuser = "xxxxxx";
$dbhost = "mysql.filmer.nl";
$dbpass = "xxxxxx";
$db     = "database";
$dbi    = "DBI:mysql:$db:$dbhost";

# Set master or slave (if slave is set then the mastersip must also be set!)
$filetype = "slave";

$etcdir = "/etc/bind/";
$conffile = "/etc/bind/named.conf.local";

# zonefiles and allow-query-value
%custom = ('adsl.filmer.nl'			=>	'',
           'server.filmer.nl'                  =>      '',
	   'local.filmer.nl'			=>	'localnetworks; trustednetworks;',
           'internal.filmer.nl'                =>      'localnetworks; trustednetworks;',
	   'mgt.filmer.nl'			=>	'localnetworks; trustednetworks;',
	   'whitelist.filmer.nl'		=>	'',
	   'blacklist.filmer.nl'		=>	'',
	   '0.168.192.in-addr.arpa'		=>	'localnetworks; trustednetworks;',
	   '2.168.192.in-addr.arpa'		=>	'localnetworks; trustednetworks;',
	   '3.168.192.in-addr.arpa'		=>	'localnetworks; trustednetworks;',
	   '4.168.192.in-addr.arpa'		=>	'localnetworks; trustednetworks;',
	   '10.250.62.in-addr.arpa'		=>	'',
	   '116.201.82.in-addr.arpa'		=>	'',
	   '117.201.82.in-addr.arpa'		=>	'',
	   '118.201.82.in-addr.arpa'		=>	'',
	   '122.201.82.in-addr.arpa'		=>	'',
	   '64/26.64.199.82.in-addr.arpa'	=>	'',
	   '48-0-127.48.255.87.in-addr.arpa'	=>	'');

$mastersip = "62.250.10.194";
$allowtransfer = "62.250.10.128/25;193.176.144.128/28;82.201.122.0/24;82.199.64.81;";

# Set Debugging on/off  (on=1 off=0)
$debug = 0;

###############################################################################

use DBI;
use Time::Local;

# Connect to the database
$dbh = DBI->connect($dbi,$dbuser,$dbpass) || die "Cannot connect to db server DBI::errstr,\n";;

# Fetch domain-data
$sth = $dbh->prepare("SELECT domein FROM pakketten WHERE use_dns='1' AND deleted='0'");
$sth->execute();

# Write named.conf
open OF, ">$conffile" || die "Cannot open $conffile";

# master
if($filetype eq 'master')
{
	print OF "zone \"0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.IP6.INT\" {\n\ttype master;\n\tfile \"master/localhost.rev\";\n};\n";

	foreach(keys %custom)
	{
		print OF "zone \"" . $_ . "\" {\n\ttype master;\n";
		# change / to s (slash) in filenames
		$_ =~ s/\//s/;
		print OF "\tfile \"${etcdir}master/custom/" . $_ . ".zone\";\n";
		print OF "\tallow-query { " . $custom{$_} . " };\n" if $custom{$_} ne '';
		print OF "};\n";
	}
}
# slave
else
{
	#print OF "zone \".\" {\n\ttype hint;\n\tfile \"/etc/namedb/named.root\";\n\t};\n";

	foreach(keys %custom)
	{
		print OF "zone \"" . $_ . "\" {\n\ttype slave;\n";
		print OF "\tmasters { " . $mastersip . "; };\n";
		# change / to s (slash) in filenames
		$_ =~ s/\//s/;
		print OF "\tfile \"/etc/bind/slave/custom/" . $_ . ".zone\";\n";
		print OF "\tallow-query { " . $custom{$_} . " };\n" if $custom{$_} ne '';
		print OF "};\n";
	}
}

print OF "\n##########################################################\n";
print OF "# LOOP FROM MYSQL DATABASE\n";
print OF "##########################################################\n\n";

while(($domain) = $sth->fetchrow_array )
{
	# Find the path to the zonefile
	$pathzone = "$filetype/".substr($domain,0,1)."/".substr($domain,1,1);

	# Make sure that the directory exists
	if (! -d "$etcdir$pathzone")
	{
		system("mkdir -p $etcdir$pathzone");
	}
	# Open the named.conf and start writing
	if ($filetype eq "slave")
	{
		print OF "zone \"$domain\" {\n\ttype slave;\n\tmasters { $mastersip; };\n\tfile \"${etcdir}${pathzone}/${domain}.zone\";};\n";
	}
	else
	{
		print OF "zone \"$domain\" {\n\ttype master;\n\tfile \"${etcdir}${pathzone}/${domain}.zone\";\n};\n";
	}

	if ($debug) { print "Create zonefile for $domain\n"; }
}

close OF;

if ($debug) { print "Created $conffile\n"; }

# If this is a slave and because the script is runned by root
# we must set the permissions right so bind cat write the zonefiles.
if($filetype eq 'slave')
{
	system("chown -R bind:bind /etc/bind/slave");
}
# Reload the nameserver
system("/etc/init.d/bind9 reload");
#system("kill -HUP `cat /etc/namedb/var/run/named.pid`");

if ($debug) { print "Reloading named\n"; }

# Close connection to the database
$sth->finish();
$dbh->disconnect();


exit(0);
